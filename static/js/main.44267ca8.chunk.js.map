{"version":3,"sources":["types/LinksPath.ts","components/Header/Header.tsx","helpers/useTodos.ts","helpers/useLocalStorage.ts","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","helpers/filterTodos.ts","components/Footer/Footer.tsx","App.tsx","index.tsx"],"names":["LinksPath","Header","addTodo","useState","value","setValue","input","useRef","useEffect","current","focus","className","onSubmit","event","preventDefault","trim","newTodo","id","Date","now","completed","title","ref","onChange","target","type","data-cy","placeholder","useTodos","key","initialValue","item","window","localStorage","getItem","JSON","parse","storedValue","setStoredValue","setItem","stringify","useLocalStorage","todos","setTodos","updatedTodos","todoIds","filter","todo","includes","items","newTodos","map","find","TodoInfo","toggleTodo","removeTodo","setChangeTitle","newTitle","setNewTitle","isEditing","setIsEdeting","handleBlur","onDoubleClick","handleEditingInputOpen","checked","onClick","currentTodo","stopPropagation","aria-label","handlerRemove","onBlur","onKeyUp","TodoList","hasCompletedTodo","changeTitle","allCompleted","length","htmlFor","classNames","editing","links","to","ALL","ACTIVE","COMPLETED","Footer","completedTodosCounter","isCompleted","some","isActive","selected","replace","completedTodos","App","useMemo","reduce","acc","curr","location","useLocation","pathname","visibleTodos","filterBy","filterTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.44267ca8.chunk.js","sourcesContent":["// eslint-disable-next-line no-shadow\nexport enum LinksPath {\n  ALL = '/',\n  ACTIVE = '/active',\n  COMPLETED = '/completed',\n}\n","import React, { useState, useRef, useEffect } from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  addTodo: (newTodo: Todo)=> void,\n};\n\nexport const Header: React.FC<Props> = ({ addTodo }) => {\n  const [value, setValue] = useState('');\n  const input = useRef<HTMLInputElement | null>(null);\n\n  useEffect(() => {\n    input.current?.focus();\n  }, []);\n\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(event.target.value);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (value.trim()) {\n      const newTodo = {\n        id: Date.now(),\n        completed: false,\n        title: value,\n      };\n\n      addTodo(newTodo);\n    }\n\n    setValue('');\n  };\n\n  return (\n    <header className=\"header\">\n      <h1>todos</h1>\n\n      <form onSubmit={handleSubmit}>\n        <input\n          ref={input}\n          onChange={handleInput}\n          value={value}\n          type=\"text\"\n          data-cy=\"createTodo\"\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n        />\n      </form>\n    </header>\n  );\n};\n","import { Todo } from '../types/Todo';\nimport { useLocalStorage } from './useLocalStorage';\n\ntype UseTodos = [\n  Todo[],\n  (newTodo: Todo)=> void,\n  (todoIds: number[]) => void,\n  (todos: Todo[]) => void,\n];\n\nexport const useTodos = (): UseTodos => {\n  const [todos, setTodos] = useLocalStorage<Todo[]>('todos', []);\n\n  const addTodo = (newTodo: Todo) => {\n    const updatedTodos = [...todos, newTodo];\n\n    setTodos(updatedTodos);\n  };\n\n  const removeTodo = (todoIds: number[]) => {\n    const updatedTodos = todos.filter(todo => !todoIds.includes(todo.id));\n\n    setTodos(updatedTodos);\n  };\n\n  const toggleTodo = (items: Todo[]) => {\n    const newTodos = todos.map(todo => {\n      const item = items.find(({ id }) => id === todo.id);\n\n      if (item) {\n        return item;\n      }\n\n      return todo;\n    });\n\n    setTodos(newTodos);\n  };\n\n  return [todos, addTodo, removeTodo, toggleTodo];\n};\n","import { useState } from 'react';\n\nexport const useLocalStorage = <T>(key: string, initialValue: T):\n[T, (value: T) => void] => {\n  const [storedValue, setStoredValue] = useState<T>(() => {\n    const item = window.localStorage.getItem(key);\n\n    return item ? JSON.parse(item) : initialValue;\n  });\n\n  const setValue = (value: T) => {\n    setStoredValue(value);\n    window.localStorage.setItem(key, JSON.stringify(value));\n  };\n\n  return [storedValue, setValue];\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useRef, useState, useEffect } from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  toggleTodo: (todos: Todo[]) => void,\n  removeTodo: (todoIds: number[]) => void,\n  todo: Todo,\n  setChangeTitle: React.Dispatch<React.SetStateAction<number | null>>,\n};\n\nexport const TodoInfo: React.FC<Props> = ({\n  toggleTodo,\n  removeTodo,\n  todo,\n  setChangeTitle,\n}) => {\n  const [newTitle, setNewTitle] = useState(todo.title);\n  const [isEditing, setIsEdeting] = useState(false);\n  const input = useRef<HTMLInputElement | null>(null);\n\n  useEffect(() => {\n    if (input.current) {\n      input.current.focus();\n    }\n  }, [isEditing]);\n\n  const handlerRemove = (id: number) => {\n    removeTodo([id]);\n  };\n\n  const handlerToggler = (currentTodo: Todo) => {\n    toggleTodo([{ ...currentTodo, completed: !todo.completed }]);\n  };\n\n  const handlerTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setNewTitle(event.target.value);\n  };\n\n  const handleBlur = () => {\n    setIsEdeting(false);\n    if (newTitle === todo.title) {\n      setChangeTitle(null);\n\n      return;\n    }\n\n    if (!newTitle.trim()) {\n      removeTodo([todo.id]);\n      setChangeTitle(null);\n\n      return;\n    }\n\n    toggleTodo([{ ...todo, title: newTitle }]);\n    setChangeTitle(null);\n  };\n\n  const handlerKeyUp = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === 'Enter') {\n      handleBlur();\n\n      return;\n    }\n\n    if (event.key === 'Escape') {\n      setNewTitle(todo.title);\n      setChangeTitle(null);\n      setIsEdeting(false);\n    }\n  };\n\n  const handleEditingInputOpen = (id: number) => {\n    setIsEdeting(true);\n    setChangeTitle(id);\n  };\n\n  const { completed, id, title } = todo;\n\n  return (\n    <>\n      <div className=\"view\" onDoubleClick={() => handleEditingInputOpen(id)}>\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          id=\"toggle-view\"\n          checked={completed}\n          onClick={(event) => {\n            event.stopPropagation();\n            handlerToggler(todo);\n          }}\n        />\n        <label>\n          {title}\n        </label>\n        <button\n          aria-label=\"Delete todo\"\n          type=\"button\"\n          className=\"destroy\"\n          data-cy=\"deleteTodo\"\n          onClick={() => handlerRemove(id)}\n        />\n      </div>\n\n      <input\n        ref={input}\n        type=\"text\"\n        className=\"edit\"\n        onChange={handlerTitle}\n        value={newTitle}\n        onBlur={handleBlur}\n        onKeyUp={handlerKeyUp}\n        placeholder=\"Empty todo will be deleted\"\n      />\n    </>\n  );\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  hasCompletedTodo: boolean,\n  todos: Todo[],\n  toggleTodo: (todos: Todo[]) => void,\n  removeTodo: (todoIds: number[]) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  hasCompletedTodo,\n  todos,\n  toggleTodo,\n  removeTodo,\n}) => {\n  const [changeTitle, setChangeTitle] = useState<number | null>(null);\n\n  const handleToggleAll = () => {\n    let allCompleted = todos.filter(todo => !todo.completed);\n\n    if (!allCompleted.length) {\n      allCompleted = [...todos];\n    }\n\n    toggleTodo(allCompleted.map(todo => (\n      { ...todo, completed: !todo.completed }\n    )));\n  };\n\n  return (\n    <section className=\"main\">\n      <input\n        type=\"checkbox\"\n        id=\"toggle-all\"\n        className=\"toggle-all\"\n        data-cy=\"toggleAll\"\n        checked={hasCompletedTodo}\n        onClick={handleToggleAll}\n      />\n      <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n      <ul className=\"todo-list\" data-cy=\"todosList\">\n        {todos.map(todo => {\n          const { id, completed } = todo;\n\n          return (\n            <li\n              key={id}\n              className={classNames(\n                { completed },\n                { editing: changeTitle === id },\n              )}\n            >\n              <TodoInfo\n                toggleTodo={toggleTodo}\n                removeTodo={removeTodo}\n                todo={todo}\n                setChangeTitle={setChangeTitle}\n              />\n            </li>\n          );\n        })}\n      </ul>\n    </section>\n  );\n};\n","import { LinksPath } from '../types/LinksPath';\nimport { Todo } from '../types/Todo';\n\nexport const filterTodos = (items: Todo[], filterBy: string) => {\n  switch (filterBy) {\n    case LinksPath.ACTIVE:\n      return items.filter(({ completed }) => completed === false);\n\n    case LinksPath.COMPLETED:\n      return items.filter(({ completed }) => completed === true);\n\n    default:\n      return items;\n  }\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\nimport { LinksPath } from '../../types/LinksPath';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  completedTodosCounter: number,\n  todos: Todo[],\n  removeTodo: (todoIds: number[]) => void,\n};\n\nconst links = [{\n  title: 'All',\n  to: LinksPath.ALL,\n}, {\n  title: 'Active',\n  to: LinksPath.ACTIVE,\n}, {\n  title: 'Completed',\n  to: LinksPath.COMPLETED,\n}];\n\nexport const Footer: React.FC<Props> = ({\n  completedTodosCounter,\n  todos,\n  removeTodo,\n}) => {\n  const handleRemoveAll = () => {\n    const completedTodos = todos.filter(({ completed }) => completed === true);\n\n    removeTodo(completedTodos.map(({ id }) => id));\n  };\n\n  const isCompleted = todos.some(({ completed }) => completed === true);\n\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\" data-cy=\"todosCounter\">\n        {`${todos.length - completedTodosCounter} items left`}\n      </span>\n\n      <ul className=\"filters\" data-cy=\"todosFilter\">\n        {links.map(({ title, to }) => (\n          <li key={title}>\n            <NavLink\n              to={to}\n              className={({ isActive }) => classNames(\n                { selected: isActive },\n              )}\n              replace\n            >\n              {title}\n            </NavLink>\n          </li>\n        ))}\n      </ul>\n\n      {isCompleted && (\n        <button\n          type=\"button\"\n          className=\"clear-completed\"\n          onClick={handleRemoveAll}\n        >\n          Clear completed\n        </button>\n      )}\n\n    </footer>\n  );\n};\n","import React, { useMemo } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Header } from './components/Header';\nimport { useTodos } from './helpers/useTodos';\nimport { TodoList } from './components/TodoList';\nimport { filterTodos } from './helpers/filterTodos';\nimport { Footer } from './components/Footer';\n\nexport const App: React.FC = () => {\n  const [todos, addTodo, removeTodo, toggleTodo] = useTodos();\n\n  const completedTodosCounter = useMemo(() => {\n    return todos.reduce((acc, curr) => {\n      return curr.completed ? acc + 1 : acc;\n    }, 0);\n  }, [todos]);\n\n  const { pathname: location } = useLocation();\n\n  const hasCompletedTodo = useMemo(() => {\n    return !todos.some(({ completed }) => completed === false);\n  }, [todos]);\n\n  const visibleTodos = filterTodos(todos, location);\n\n  return (\n    <div className=\"todoapp\">\n      <Header addTodo={addTodo} />\n\n      {!!todos.length && (\n        <>\n          <TodoList\n            toggleTodo={toggleTodo}\n            removeTodo={removeTodo}\n            hasCompletedTodo={hasCompletedTodo}\n            todos={visibleTodos}\n          />\n\n          <Footer\n            completedTodosCounter={completedTodosCounter}\n            todos={todos}\n            removeTodo={removeTodo}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable react/react-in-jsx-scope */\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}